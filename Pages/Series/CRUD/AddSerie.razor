@page "/addserie"
@using MyFavoriteThings.Data.Models;
@using MyFavoriteThings.Classes;
@inject HttpClient  http
@inject NavigationManager NavigationManager

<h3>Adicionar nova série</h3>
<hr />
<EditForm Model="@serie" OnValidSubmit="Createseries">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <div class="col-12">
            <div class="form-group">
                <label for="Titulo" class="custom-control-label">Titulo</label>
                <InputText @bind-Value="@serie.Titulo" class="form-control" />
                <ValidationMessage For="@(() => serie.Titulo)" />
            </div>
            <div class="form-group">
                <label for="Desc" class="custom-control-label">Desc</label>
                <InputTextArea @bind-Value="@serie.Desc" class="form-control" />
                <ValidationMessage For="@(() => serie.Desc)" />
            </div>
            <div class="form-group">
                <label for="Capa" class="custom-control-label">Capa</label>
                <InputText @bind-Value="@serie.Capa" class="form-control" />
                <ValidationMessage For="@(() => serie.Capa)" />
            </div>
            <div class="form-group">
                <label for="Genero" class="custom-control-label">Género</label>
                <InputText @bind-Value="@serie.Genero" class="form-control" />
                <ValidationMessage For="@(() => serie.Genero)" />
            </div>
            <div class="form-group">
                <label for="DataLancamento" class="custom-control-label">Data de Lançamento</label>
                <InputDateTime @bind-Value="@serie.DataLancamento" class="form-control" />
                <ValidationMessage For="@(() => serie.DataLancamento)" />
            </div>
            <div class="form-group">
                <label for="Duracao" class="custom-control-label">Duração</label>
                <InputDateTime @bind-Value="@serie.Duracao" class="form-control" />
                <ValidationMessage For="@(() => serie.Duracao)" />
            </div>
            <div class="form-group">
                <label for="Idioma" class="custom-control-label">Idioma</label>
                <InputText @bind-Value="@serie.Idioma" class="form-control" />
                <ValidationMessage For="@(() => serie.Idioma)" />
            </div>
            <div class="form-group">
                <label for="Emissora" class="custom-control-label">Emissora</label>
                <InputText @bind-Value="@serie.Emissora" class="form-control" />
                <ValidationMessage For="@(() => serie.Emissora)" />
            </div>
            <div class="form-group">
                <label for="Idade" class="custom-control-label">Idade</label>
                <InputText @bind-Value="@serie.Idade" class="form-control" />
                <ValidationMessage For="@(() => serie.Idade)" />
            </div>
            <div class="form-group">
                <label for="Classificacao" class="custom-control-label">Classificação</label>
                <InputNumber @bind-Value="@serie.Classificacao" class="form-control" />
                <ValidationMessage For="@(() => serie.Classificacao)" />
            </div>
            <div class="form-group">
                <label for="IsYourFavorite" class="custom-control-label">Marcar isto como favorito?</label>
                <InputCheckbox @bind-Value="@serie.IsYourFavorite" />
                @*<ValidationMessage For="@(() => serie.IsYourFavorite)" />*@
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="submit" class="btn btn-primary" value="Salvar" />
                <input type="reset" class="btn btn-primary" value="Limpar" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancelar" />
            </div>
        </div>
    </div>
</EditForm>

@code {
    Série serie = new Série();

    protected async Task Createseries()
    {
        await http.PostJsonAsync("/api/series", serie);
        NavigationManager.NavigateTo("series");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("series");
    }
}
